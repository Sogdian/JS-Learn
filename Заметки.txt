sogdian4815@gmail.com
sogdian

БЭМ https://practicum.yandex.ru/learn/frontend-developer/courses/738daf5a-b9fe-4bbe-800c-c43f30ebafd4/sprints/178889/topics/094f22ed-74be-4eb9-a626-5e37aa559901/lessons/0a29854e-bcae-4658-8a4d-8814dc397534/
    Использовать kebab-case
    правила именования https://ru.bem.info/methodology/naming-convention/
    block-name__elem-name_mod-name_mod-val
    блок-1__элемент_модификатор-1
    блок модификатор_1
    блок-1__элемент блок-2 (микс)

    //Блоки. Блоки принято определять через имена классов. В случае имени из нескольких слов, их разбивают дефисом "-".
    Эти имена должны описывать назначение блока, а не его внешний вид или состояние.
        <header class="header"></header> - Большой компонент лейаута, который, скорее всего, окажется на всех страницах
        <article class="card"></article> - Карточка — постоянно переиспользуемый элемент. Обычно их много на странице
        <input type="text" class="textfield"> - Поле ввода текста, оно отличается от флажков или кнопок единичного выбора, блок назван через функциональность
        <form class="subscribtion-form"></form> - Форма подписки, может появляться на разных страницах вашего сайта
        <header class="header"> - блок1, Блок button внутри блока header, в этом случае доп (помимо стилей button) стили будут в header__button
            <button class="button header__button">Кнопка в шапке</button> - блок2 блок1__элемент, это Микс
        </header>

    //Элементы. Элементы — составная часть блока. В элементах стилизуются элементы блока
    Если вы вкладываете один блок в другой, вы считаете, что каждый из них может оказаться по отдельности в другом месте в интерфейсе.
    Элементы же не могут жить вне своего блока, они с ним связаны. Нужно строить связи только между блоками и элементами
        <ul class="tracklist"> - блок
            <li class="tracklist__item">Алла Пугачева — Приезжай</li> - блок__элемент1
                <a href="#" class="tracklist__link">Алла Пугачева — Приезжай</a> - блок__элемент2
        </ul>
        <header class="header"> - блок1
            <a href="tel:112" class="header__link">Экстренный вызов</a> - - блок1__элемент1, тут ссылка связана с одним блоком
            <nav class="menu"> - блок2
                <ul>
                    <li>
                        <a href="#" class="header__link menu__link">Пожарная служба</a> - - блок1__элемент1, - блок2__элемент2, тут ссылка связана с двумя блоками, два класса по-разному определяют поведение этого элемента в своём контексте.
                    </li>
                </ul>
            </nav>
        </header>

        //Модификаторы.
        Это про обстоятельства использования, способ уточнять поведение блока или элемента в зависимости от ситуации их применения.
        Модификаторы «булевы» и типа «ключ-значение»
        Основные стили всегда должны быть написаны в базовом классе, а модифицирующие в отдельных.
            <nav class="menu"> - блок
                <ul>
                    <li><a class="menu__link menu__link_is-current">Главная</a></li> - блок__элемент блок__элемент_модификатор, в блок__элемент будут общие стили для всех ссылок, в блок__элемент_модификатор будет только стиль подчёркивания для текущей страницы
                    <li><a class="menu__link">О проекте</a></li> - блок__элемент
                </ul>
            </nav>
            <button class="button button_size_l button_theme_dark button_action_approve"> - блок модификатор_1 модификатор_2 модификатор_3, Каждому такому состоянию интерфейса могут быть назначены свои стили в дополнение к общим для блока или элемента.
                Подтвердить
            </button>

        //Микс
        Миксом называют способы примешивания стилей к основным
        Если в вашем макете есть повторяющийся паттерн, применимый ко многим компонентам, то на вы описываете абстрактный блок с повторяющимися стилями
            <header class="header"> - блок1
                <button class="button header__button">Кнопка в шапке</button> - блок2 блок1__элемент
            </header>
            <form class="subscribe-form"> - блок1
                <input type="checkbox" class="subscribe-form__checkbox visually-hidden"> - блок1__элемент1 блок-2
                <span class="subscribe-form__pseudo-checkbox"></span> - блок1__элемент2
            </form>
            <section class="cover"> - блок1
                <img src="/illustration.svg" class="cover__illustration rotation"> блок1__элемент блок2
            </section>
            <section class="content"> блок3
                <div class="content__illustration-pic rotation"></div> блок3__элемент-3 блок2
            </section>

        //Стилизация
        Стилизацию предлагают делать только с использованием селекторов по классам, избегая выбора элементов по тегам.
        Именование классов по БЭМ в большинстве случаев позволяет не использовать вложенные селекторы
            .header {}
            .header__button {}

        //Файловые структуры в БЭМ
        Отдельные папки создают и под блоки, и под элементы, а ещё выделяют отдельные папки под ключи модификаторов
            |--blocks
            |--|--header
            |--|--|--header.css
            |--|--|--_theme
            |--|--|--|--header_theme_dark.css
            |--|--|--|--header_theme_light.css
            |--|--|--__menu
            |--|--|--|--header__menu.css
            |--|--|--|--_is-fixed
            |--|--|--|--|--header__menu_is-fixed.css
            |--index.html
            |--about.html

        Соглашения
            применено единообразное разделение имён блоков, элементов и модификаторов во всем проекте;
            элемент не используется вне своего блока;
            нет элементов элементов;
            класс модификатор не используется без указания блока или элемента, который он модифицирует;
            классы модификаторы описывают только модифицированное значение, остальные описаны в стилях блока;
            внешняя геометрия блоков задана через миксы.

Разрешения:
Статистика https://screensizemap.com/
С работы
    192*720
    1280*720
    1024*720
    390*732

С Практикума
    1440
    1280
    768
    320

//Вопросы
//1
Зачем в готовом кейсе window.onload? У нас же есть кнопки по которым меняется тема
Или это чтобы точно темная тема загрузилась если есть параметр theme?
window.onload = () => {
  const themeInLocal = localStorage.getItem('theme');
  if (themeInLocal) {
    setDarkTheme();
  } else {
    setLightTheme();
  }
};

darkThemeBtn.onclick = () => {
  setDarkTheme();
  localStorage.setItem('theme', 'dark'); //зачем это?
};

//2
как получить отрицательное значение в расчете в calc?

//3
https://codepen.io/Sogdian/pen/rNPyQBy
есть такой код, как сделать, чтобы всевдоелемент был сзади слов "old idea"

//4
Пояснить про color-scheme
https://practicum.yandex.ru/learn/frontend-developer/courses/d763b691-52eb-4ff3-8ab9-35de4faf9449/sprints/178893/topics/a219d915-1575-4582-a352-6d005915c556/lessons/db019d1e-fb9f-4c4e-8e25-314f1792d267/
https://sandbox.practicum-team.ru/tasks/03-design/06-different-devices/05-prefers/example-03/pre/
"Обратите внимание, меняются только те цвета, которые мы не задавали собственноручно. Например, цвета формы, подписей чекбокса и радиокнопок не меняются, там мы переопределили дефолтные стили браузера."
но цвет в label меняется
если поставить для form цвет желтый, то он тоже будет меняться

//5
При  prefers-reduced-motion со значением reduce у меня наоборот все быстрее анимируется
https://sandbox.practicum-team.ru/tasks/03-design/06-different-devices/05-prefers/example-06/pre/
